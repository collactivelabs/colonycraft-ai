openapi: 3.0.0
info:
  title: ColonyCraft API
  description: API documentation for the ColonyCraft application
  version: 1.0.0
  contact:
    email: your-email@example.com

servers:
  - url: http://localhost:8000
    description: Local development server
  - url: https://api.colonycraft.com
    description: Production server

paths:
  /api/v1/register:
    post:
      summary: Register new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'

  /api/v1/login:
    post:
      summary: Login user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'

  /api/v1/generate-image:
    post:
      summary: Generate image
      tags:
        - Image Generation
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
      responses:
        '200':
          description: Image generation task created
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_id:
                    type: integer
                  status:
                    type: string

  /api/v1/generate-video:
    post:
      summary: Generate video
      tags:
        - Video Generation
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
      responses:
        '200':
          description: Video generation task created
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_id:
                    type: integer
                  status:
                    type: string

  /api/v1/files/{file_id}:
    get:
      summary: Get file metadata
      tags:
        - Files
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: file_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: File metadata retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
    delete:
      summary: Delete file
      tags:
        - Files
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: file_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: File deleted successfully

components:
  schemas:
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password

    Token:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string

    File:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        file_url:
          type: string
        type:
          type: string
        created_at:
          type: string
          format: date-time

    Task:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        type:
          type: string
        status:
          type: string
          enum: [queued, processing, completed, failed]
        result_url:
          type: string
        created_at:
          type: string
          format: date-time

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

security:
  - BearerAuth: []
  - ApiKeyAuth: []
# ==========================================================================
# ColonyCraft API Environment Configuration Template
# ==========================================================================
# Instructions:
# 1. Copy this file to .env: cp .env.example .env
# 2. Replace placeholder values with your actual configuration
# 3. Never commit your actual .env file to version control
# ==========================================================================

# Basic Settings
# ---------------------------
ENVIRONMENT=development  # Options: development, staging, production
DEBUG=true               # Set to false in production
PROJECT_NAME=ColonyCraftAPI
VERSION=1.0.0
PYTHONPATH=src

# Security
# ---------------------------
# Generate a secure key with: openssl rand -hex 48
SECRET_KEY=replace_with_secure_random_key_at_least_48_chars_long
SECRET_NAME=colonycraft-api-key
API_KEY=$(openssl rand -base64 48)
ACCESS_TOKEN_EXPIRE_MINUTES=30

# CORS Settings
# ---------------------------
# Add any domains that should be allowed to make cross-origin requests
# Format for these should be directly usable in settings
ALLOWED_HOSTS='["localhost", "127.0.0.1"]'
ALLOWED_ORIGINS='["http://localhost:3006","http://127.0.0.1:3006"]'

# Database
# ---------------------------
POSTGRES_SERVER=localhost
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_secure_password  # Use a strong password in production
POSTGRES_DB=colonycraft
# Optional: Override full database URL
# DATABASE_URL=postgrespostgresql://postgres:password@localhost/colonycraft

# Redis
# ---------------------------
REDIS_HOST=localhost  # Use redis if using Docker Compose
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=  # Add password for production
# Optional: Override full Redis URL
# REDIS_URL=redis://localhost:6379/0

# Celery
# ---------------------------
# These will be set automatically based on Redis settings if left empty
# CELERY_BROKER_URL=redis://localhost:6379/0
# CELERY_RESULT_BACKEND=redis://localhost:6379/0

# Cloud Storage (Production)
# ---------------------------
# For local development, leave these empty to use local storage
GCP_BUCKET_NAME=  # Your Cloud Storage bucket name
GOOGLE_APPLICATION_CREDENTIALS=  # Path to service account JSON file
GOOGLE_CLOUD_PROJECT=  # Your GCP project ID

# AI Services
# ---------------------------
STABLE_DIFFUSION_MODEL=stabilityai/stable-diffusion-2-1
ANTHROPIC_API_KEY=  # Your Anthropic API key
OPENAI_API_KEY=  # Your OpenAI API key
MISTRAL_API_KEY=  # Your Mistrall API key
GEMINI_API_KEY=  # Your Google API key
ANTHROPIC_BASE_URL=  # Your Anthropic base URL
OPENAI_BASE_URL=  # Your OpenAI base URL
OLLAMA_BASE_URL=  # Your Ollama base URL
MISTRAL_API_BASE_URL=  # Your Mistrall API base URL

# Rate Limiting
# ---------------------------
RATE_LIMIT_WINDOW=60  # Time window in seconds
RATE_LIMIT_MAX_REQUESTS=100  # Max requests per window

# Logging
# ---------------------------
LOG_LEVEL=INFO  # Set to DEBUG for development, INFO for production

# ESLint
# ---------------------------
ESLINT_USE_FLAT_CONFIG=true
ESLINT_CONFIG_PATH=eslint.config.js

